{"version":3,"file":"static/js/115.6560f477.chunk.js","mappings":"gNAkDA,UA5Ca,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAWR,OATAE,EAAAA,EAAAA,YAAU,WACHF,IACLD,GAAU,IACVI,EAAAA,EAAAA,GAAY,OAAQH,GACjBI,MAAK,SAAAC,GAAI,OAAIR,EAAQQ,EAAKT,KAAjB,IACTU,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IACXG,QAAQX,GAAU,IACtB,GAAE,CAACC,KAGF,gCACGF,IAAU,SAAC,IAAD,KACX,UAAC,KAAD,WACGF,GACCA,EAAKe,KAAI,SAAAC,GACP,OACE,2BACE,SAAC,KAAD,CACEC,IACED,EAAKE,aAAL,0CACuCF,EAAKE,cACxC,mFAENC,MAAM,MACNC,OAAO,MACPC,IAAKL,EAAKM,QAEZ,UAAC,KAAD,oBAAiBN,EAAKM,SACtB,UAAC,KAAD,oBAAiBN,EAAKO,eAZfP,EAAKQ,GAejB,IACc,IAAhBxB,EAAKyB,SAAgB,0CACtB,SAAC,EAAAC,SAAD,CAAUC,UAAU,SAAC,IAAD,WAI3B,C,uLC9CYC,EAAWC,EAAAA,GAAAA,GAAH,qJASRC,EAAYD,EAAAA,GAAAA,IAAH,+EAMTE,EAAWF,EAAAA,GAAAA,EAAH,+CAIRG,EAAcH,EAAAA,GAAAA,GAAH,6CAIXI,EAASJ,EAAAA,GAAAA,GAAH,sC,qHCvBnBK,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,EAAAA,EAAAA,IAAA,sBAAiC,CACtDG,OAAQ,CACNC,QAASH,KAHR,cACCI,EADD,yBAMEA,EAAS9B,MANX,kEASA,SAAeF,EAAtB,iDAAO,OAAP,oBAAO,WAA2BiC,EAAUC,GAArC,gFACCC,EAAY,CAChBC,OAAO,sBACPC,MAAM,uBAAD,OAAyBH,GAC9BI,MAAM,UAAD,OAAYJ,GACjBzC,KAAK,UAAD,OAAYyC,EAAZ,YACJK,QAAQ,UAAD,OAAYL,EAAZ,aANJ,SASkBP,EAAAA,EAAAA,IAAA,UAAaQ,EAAUF,IAAa,CACzDH,OAAQ,CACNC,QAASH,KAXR,cASCI,EATD,yBAeEA,EAAS9B,MAfX,kE","sources":["components/subpages/Cast.js","components/subpages/Subpages.styled.jsx","services/Fetch.js"],"sourcesContent":["import { useEffect, useState, Suspense } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovies } from 'services/Fetch';\nimport { Loader } from 'components/loader/Loader';\nimport { CastImage, CastInfo, CastList } from './Subpages.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n    setLoader(true);\n    fetchMovies('cast', movieId)\n      .then(data => setCast(data.cast))\n      .catch(error => console.log(error))\n      .finally(setLoader(false));\n  }, [movieId]);\n\n  return (\n    <>\n      {loader && <Loader />}\n      <CastList>\n        {cast &&\n          cast.map(star => {\n            return (\n              <li key={star.id}>\n                <CastImage\n                  src={\n                    star.profile_path\n                      ? `https://image.tmdb.org/t/p/w200/${star.profile_path}`\n                      : 'https://cdn.pixabay.com/photo/2022/11/16/23/57/movie-theater-7597054_960_720.png'\n                  }\n                  width=\"100\"\n                  height=\"135\"\n                  alt={star.name}\n                />\n                <CastInfo>Name: {star.name}</CastInfo>\n                <CastInfo>Role: {star.character}</CastInfo>\n              </li>\n            );\n          })}\n        {cast.length === 0 && <h2>Mothing Here</h2>}\n        <Suspense fallback={<Loader />} />\n      </CastList>\n    </>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  gap: 30px;\n`;\n\nexport const CastImage = styled.img`\n  display: block;\n  padding: 5px;\n  margin: 0 auto;\n`;\n\nexport const CastInfo = styled.p`\n  text-align: center;\n`;\n\nexport const ReviewsInfo = styled.ul`\n  list-style: none;\n`;\n\nexport const Author = styled.h3`\n  color: red;\n`;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = 'd783920aea034ba2adae6031a0bf96c0';\n\nexport async function fetchTrends() {\n  const response = await axios.get(`/trending/movie/day`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovies(endpoint, feature) {\n  const ENDPOINTS = {\n    trends: `/trending/movie/day`,\n    query: `/search/movie?query=${feature}`,\n    movie: `/movie/${feature}`,\n    cast: `/movie/${feature}/credits`,\n    reviews: `/movie/${feature}/reviews`,\n  };\n\n  const response = await axios.get(`${ENDPOINTS[endpoint]}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return response.data;\n}\n"],"names":["useState","cast","setCast","loader","setLoader","movieId","useParams","useEffect","fetchMovies","then","data","catch","error","console","log","finally","map","star","src","profile_path","width","height","alt","name","character","id","length","Suspense","fallback","CastList","styled","CastImage","CastInfo","ReviewsInfo","Author","axios","KEY","fetchTrends","params","api_key","response","endpoint","feature","ENDPOINTS","trends","query","movie","reviews"],"sourceRoot":""}