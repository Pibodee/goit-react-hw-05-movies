{"version":3,"file":"static/js/279.fe3e3796.chunk.js","mappings":"gNAyCA,UAnCgB,WACZ,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAWR,OATAE,EAAAA,EAAAA,YAAU,WACDF,IACLD,GAAU,IACZI,EAAAA,EAAAA,GAAY,UAAWH,GACpBI,MAAK,SAAAC,GAAQ,OAAIR,EAAWQ,EAASC,QAAxB,IACTC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IACfG,QAAQZ,GAAU,IACtB,GAAE,CAACC,KAGA,gCACKF,IAAU,SAAC,IAAD,IACdF,IACC,SAAC,KAAD,UACGA,EAAQgB,KAAI,SAAAC,GACX,OACE,2BACE,UAAC,KAAD,sBAAiBA,EAAOC,WACxB,oCAAYD,EAAOE,aAFZF,EAAOG,GAKnB,MAGe,IAAnBpB,EAAQqB,SAAgB,wCACzB,SAAC,EAAAC,SAAD,CAAUC,UAAU,SAAC,IAAD,QAG3B,C,uLCrCYC,EAAWC,EAAAA,GAAAA,GAAH,qJASRC,EAAYD,EAAAA,GAAAA,IAAH,uEAKTE,EAAWF,EAAAA,GAAAA,EAAH,2CAGRG,EAAcH,EAAAA,GAAAA,GAAH,+CAKXI,EAASJ,EAAAA,GAAAA,GAAH,iC,qHCtBnBK,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,EAAAA,EAAAA,IAAA,sBAAiC,CACtDG,OAAQ,CACNC,QAASH,KAHR,cACCtB,EADD,yBAMEA,EAAS0B,MANX,kEASA,SAAe5B,EAAtB,iDAAO,OAAP,oBAAO,WAA2B6B,EAAUC,GAArC,gFACCC,EAAY,CAChBC,OAAO,sBACPC,MAAM,uBAAD,OAAyBH,GAC9BI,MAAM,UAAD,OAAYJ,GACjBK,KAAK,UAAD,OAAYL,EAAZ,YACJrC,QAAQ,UAAD,OAAYqC,EAAZ,aANJ,SASkBP,EAAAA,EAAAA,IAAA,UAAaQ,EAAUF,IAAa,CACzDH,OAAQ,CACNC,QAASH,KAXR,cASCtB,EATD,yBAeEA,EAAS0B,MAfX,kE","sources":["components/subpages/Reviews.js","components/subpages/Subpages.styled.jsx","services/Fetch.js"],"sourcesContent":["import { useState, useEffect, Suspense } from \"react\"\nimport { fetchMovies } from \"services/Fetch\";\nimport { useParams } from \"react-router-dom\";\nimport { Loader } from \"components/loader/Loader\";\nimport { Author, ReviewsInfo } from \"./Subpages.styled\";\n\nconst Reviews = () => {\n    const [reviews, setReviews] = useState([])\n    const [loader, setLoader] = useState(false)\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        if (!movieId) return;\n        setLoader(true)\n      fetchMovies('reviews', movieId)\n        .then(response => setReviews(response.results))\n            .catch(error => console.log(error))\n        .finally(setLoader(false))\n    }, [movieId]);\n\n    return (\n        <>\n            {loader && <Loader/>}\n        {reviews && (\n          <ReviewsInfo>\n            {reviews.map(review => {\n              return (\n                <li key={review.id}>\n                  <Author>Author: {review.author}</Author>\n                  <p>Review: {review.content}</p>\n                </li>\n              );\n            })}\n          </ReviewsInfo>\n        )}\n        {reviews.length === 0 && <h3>No reviews</h3>}\n        <Suspense fallback={<Loader />} />\n      </>\n    );\n}\n\nexport default Reviews","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  gap: 30px;\n`;\n\nexport const CastImage = styled.img`\ndisplay: block;\npadding: 5px;\nmargin: 0 auto;`\n\nexport const CastInfo = styled.p`\ntext-align: center;`\n\nexport const ReviewsInfo = styled.ul`\n  list-style: none;\n\n`;\n\nexport const Author = styled.h3`\ncolor: red`","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = 'd783920aea034ba2adae6031a0bf96c0';\n\nexport async function fetchTrends() {\n  const response = await axios.get(`/trending/movie/day`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data\n}\n\nexport async function fetchMovies(endpoint, feature) {\n  const ENDPOINTS = {\n    trends: `/trending/movie/day`,\n    query: `/search/movie?query=${feature}`,\n    movie: `/movie/${feature}`,\n    cast: `/movie/${feature}/credits`,\n    reviews: `/movie/${feature}/reviews`,\n  };\n\n  const response = await axios.get(`${ENDPOINTS[endpoint]}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return response.data\n}\n\n\n\n"],"names":["useState","reviews","setReviews","loader","setLoader","movieId","useParams","useEffect","fetchMovies","then","response","results","catch","error","console","log","finally","map","review","author","content","id","length","Suspense","fallback","CastList","styled","CastImage","CastInfo","ReviewsInfo","Author","axios","KEY","fetchTrends","params","api_key","data","endpoint","feature","ENDPOINTS","trends","query","movie","cast"],"sourceRoot":""}