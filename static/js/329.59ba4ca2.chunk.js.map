{"version":3,"file":"static/js/329.59ba4ca2.chunk.js","mappings":"iNAGaA,EAAWC,EAAAA,GAAAA,GAAH,4FAMRC,GAAYD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,sE,SCetB,EAnBmB,SAAC,GAAgB,IAAdG,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MACf,OACI,+BACI,SAACN,EAAD,UACKI,EAAOG,KAAI,YAAiB,IAAfC,EAAc,EAAdA,GAAIC,EAAU,EAAVA,MACd,OACE,yBACE,SAACP,EAAD,CAAWQ,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA/C,SACGI,KAFID,EAMf,OAIf,C,oJCpBYK,EAAaZ,EAAAA,GAAAA,KAAH,sGAOVa,EAAcb,EAAAA,GAAAA,MAAH,kDAIXc,EAAkBd,EAAAA,GAAAA,OAAH,+J,SCwB5B,EA/Be,WAAO,IAAD,EACnB,GAA4Be,EAAAA,EAAAA,UAAS,IAArC,eAAOZ,EAAP,KAAea,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAS,UAAGF,EAAaG,IAAI,oBAApB,QAAoC,GAC7CjB,GAAWC,EAAAA,EAAAA,MAejB,OAPAiB,EAAAA,EAAAA,YAAU,WACHF,IACLG,EAAAA,EAAAA,GAAY,QAASH,GAClBI,MAAK,SAAAC,GAAI,OAAIT,EAAUS,EAAKC,QAAnB,IACTC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACR,KAGF,iCACE,UAACR,EAAD,CAAYmB,SAfK,SAAAC,GACnBA,EAAIC,iBACJ,IAAMC,EAAOF,EAAIG,OACjBhB,EAAgB,CAAEC,UAAWc,EAAKE,SAAShB,UAAUiB,OACtD,EAWG,WACE,SAACxB,EAAD,CAAayB,KAAK,OAAOC,KAAK,eAC9B,SAACzB,EAAD,CAAiBwB,KAAK,SAAtB,wBAEF,SAACE,EAAA,EAAD,CAAYrC,OAAQA,EAAQO,MAAO,CAAEC,KAAMP,MAC3C,SAAC,KAAD,MAGL,C,qHCjCDqC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,EAAAA,EAAAA,IAAA,sBAAiC,CACtDG,OAAQ,CACNC,QAASH,KAHR,cACCI,EADD,yBAMEA,EAASrB,MANX,kEASA,SAAeF,EAAtB,iDAAO,OAAP,oBAAO,WAA2BwB,EAAUC,GAArC,gFACCC,EAAY,CAChBC,OAAO,sBACPC,MAAM,uBAAD,OAAyBH,GAC9BI,MAAM,UAAD,OAAYJ,GACjBK,KAAK,UAAD,OAAYL,EAAZ,YACJM,QAAQ,UAAD,OAAYN,EAAZ,aANJ,SASkBP,EAAAA,EAAAA,IAAA,UAAaQ,EAAUF,IAAa,CACzDH,OAAQ,CACNC,QAASH,KAXR,cASCI,EATD,yBAeEA,EAASrB,MAfX,kE","sources":["components/moviesList/MovieList.styled.jsx","components/moviesList/MoviesList.js","pages/movies/Movies.styled.jsx","pages/movies/Movies.js","services/Fetch.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const LinkList = styled.ul`\nlist-style: none;\ndisplay: flex;\nflex-direction: column;\ngap: 8px`\n\nexport const MovieLink = styled(Link)`\ncolor: black;\n\n&:hover {\n    color: red;\n}`;","import {useLocation } from \"react-router-dom\"\nimport PropTypes from 'prop-types';\nimport { LinkList, MovieLink } from \"./MovieList.styled\";\n\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n    return (\n        <>\n            <LinkList>\n                {movies.map(({id, title})=> {\n                    return (\n                      <li key={id}>\n                        <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n                          {title}\n                        </MovieLink>\n                      </li>\n                    );\n               })}\n            </LinkList>\n        </>\n    )\n}\n\nexport default MoviesList\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n};","import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  padding: 10px;\n  display: flex;\n  gap: 10px;\n  justify-content: center;\n`;\n\nexport const StyledInput = styled.input`\n  border: 1px solid red;\n`;\n\nexport const StyledSearchBtn = styled.button`\n  border: 1px solid red;\n  padding: 5px;\n  border-radius: 20%;\n  &:hover {\n    color: red;\n    background-color: lightgrey;\n  }\n`;\n","import MoviesList from 'components/moviesList/MoviesList';\nimport { useEffect, useState } from 'react';\nimport { Outlet, useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchMovies } from 'services/Fetch';\nimport { StyledForm, StyledInput, StyledSearchBtn } from './Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('movieName') ?? '';\n  const location = useLocation();\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.target;\n    setSearchParams({ movieName: form.elements.movieName.value });\n  };\n\n  useEffect(() => {\n    if (!movieName) return;\n    fetchMovies('query', movieName)\n      .then(data => setMovies(data.results))\n      .catch(error => console.log(error));\n  }, [movieName]);\n\n  return (\n    <>\n      <StyledForm onSubmit={handleSubmit}>\n        <StyledInput type=\"text\" name=\"movieName\" />\n        <StyledSearchBtn type=\"submit\">Search</StyledSearchBtn>\n      </StyledForm>\n      <MoviesList movies={movies} state={{ from: location }} />\n      <Outlet />\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = 'd783920aea034ba2adae6031a0bf96c0';\n\nexport async function fetchTrends() {\n  const response = await axios.get(`/trending/movie/day`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data\n}\n\nexport async function fetchMovies(endpoint, feature) {\n  const ENDPOINTS = {\n    trends: `/trending/movie/day`,\n    query: `/search/movie?query=${feature}`,\n    movie: `/movie/${feature}`,\n    cast: `/movie/${feature}/credits`,\n    reviews: `/movie/${feature}/reviews`,\n  };\n\n  const response = await axios.get(`${ENDPOINTS[endpoint]}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return response.data\n}\n\n\n\n"],"names":["LinkList","styled","MovieLink","Link","movies","location","useLocation","map","id","title","to","state","from","StyledForm","StyledInput","StyledSearchBtn","useState","setMovies","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","fetchMovies","then","data","results","catch","error","console","log","onSubmit","evt","preventDefault","form","target","elements","value","type","name","MoviesList","axios","KEY","fetchTrends","params","api_key","response","endpoint","feature","ENDPOINTS","trends","query","movie","cast","reviews"],"sourceRoot":""}